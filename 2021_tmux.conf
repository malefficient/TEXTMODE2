#
# Example .tmux.conf
# Based on https://github.com/tmux/tmux/blob/master/example_tmux.conf 
# Modified by jc. Trying to slim down for the holidays

# As of 2021-11-11 I actaully re-verified that all of the changes I've been
# carrying around for 5+ years are still relevant/required. 
#
# Future work: I'd actualy really like to break this file into more smaller pieces
# It looks like there is a guy here who was a similar idea / use-case
# https://stackoverflow.com/questions/43106611/split-tmux-conf-into-multiple-files

# Change the prefix key to C-space
set -g prefix C-Space
unbind C-b
bind C-Space  send-prefix

# Somewhere around 3.2 this became necessary to maintain functioning sanity
set -g remain-on-exit off #

# No bells at all
set -g bell-action none

## rebind the split commands to something more intuitive
unbind %
bind | split-window -h
bind - split-window -v

## (D)etach: 'd','D'
bind d detach
## If 'd' is detach, lets make 'D' (D)etach others
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'
## jc: Note: this is the first and only instance that utilizes the more complex 'if' expression is used in this file

## Window resizing (V): Think '>' (Bigger) or '<' (smaller)
bind-key -r   '<'   resize-pane -D 5
bind-key -r   '>'   resize-pane -U 5

##Window resizing (H): Think '\' (Left) or (/) (Right)
bind-key -r   '/'   resize-pane -R 5
bind-key -r   "\\"   resize-pane -L 5

## Hitting 'A' top ren(A)me windows is just muscle memory from screen
## No need to fight it.
unbind ,
bind-key          A command-prompt -I "#W" 'rename-window %%'

## Hitting '$' is completely context-less. How about 'S' for 'rename-(S)ession'
## This also has the nice feature of being the inverse of 's' 'choose-(s)ession'
unbind '$'
bind-key          S command-prompt -I "" 'rename-session %%'

## Pane / Window Navigation
## Each Tab contains one or more Panes (Windows). 
## Each Pane / Window has a unique identifier (#) number
## Not sure which pane is which? Lets bind '#' to find out
bind-key '#' display-panes

## 'Hit 'j' to (J)ump to a given pane no. (#)
bind-key          j command-prompt -I "" 'select-pane -t  %%'

## The default tmux utilizies 'q' in lieu of '#' as outlined above.
## I don't personally use either, but binding 'Q'/q' to Display / Jump
## Much like my '#' / '3' trick might appeal to anyone used to stock binding
bind-key      'q' display-panes
bind-key      'Q' command-prompt -I "" 'select-pane -t  %%'
bind-key       3  command-prompt -I "" 'select-pane -t  %%'

## To those of you with no loyalty to the default tmux key bindings
## How about 'q' / 'Q' to 'Quit'
#
#

## Ctrl TAB is kind of ~ 'Alt-Tab' on Windows/MacOS
bind-key          tab  select-pane -t :.-
bind -r           Tab last-window   # cycle thru MRU tabs

## Bind the (N)ext and (P)rev window / tab key navigations to their obvious choice
bind-key         n  next-window
bind-key 	 p   previous-window

## D-PAD Arrow navigation (1/2) : tight
## When using this configuration, the up/down/left/right arrows
## can be used to navigate amongs panes (windows) just like a D-PAD 
bind-key          up    select-pane -U -t :
bind-key          down  select-pane -D -t :
bind-key          left  select-pane -L -t :
bind-key          right select-pane -R -t :

## D-PAD Arrow navigation (2/2) : loose
## For most situations, (2-3 panes per tab)
## the up/down arrows can be used to navigate w
## bind-key 	 left   previous-window
## bind-key         right  next-window
## bind-key         up     select-pane -t :.-
## bind-key         down   select-pane -t :.+

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places //jc: new
bind F set -w window-size

##### Mouse support  ##############################
##  Honestly I don't use this much, but i did try to group / place /name them consistently
##  Tmux-example.conf:   Turn the mouse on, but without copy mode dragging
### set -g mouse on
### unbind -n MouseDrag1Pane
### unbind -Tcopy-mode MouseDrag1Pane

#   Mouse whell scrolling (johnny)
#   When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
#   bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
#   bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# Okay: The major layout / navigation keys have all been handled above
# Now for some more static global helpers 
#

## Misc global things 
# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"


# ?? jc ??? wtf 
# Keys to toggle monitoring activity in a window and the synchronize-panes option
# bind m set monitor-activity
# bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

